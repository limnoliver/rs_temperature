basin_huc4 = c('0204', '0712', '0713', '1401', '1402')
basins <- tibble(basin_name = c('DRB', rep(c('ILRB', 'UCRB'), each = 2)),
basin_huc4 = c('0204', '0712', '0713', '1401', '1402'))
# HUC units for each basin
library(dplyr)
basins <- tibble(basin_name = c('DRB', rep(c('ILRB', 'UCRB'), each = 2)),
basin_huc4 = c('0204', '0712', '0713', '1401', '1402'))
View(basins)
# read in HUCs and subset
library(sf)
hucs <- sf::st_read('wbdhu4_a_us_september2020/wbdhu4_a_us_september2020.gdb')
#
names(hucs)
head(hucs)
''str(huc)
str(hucs)
hucs <- sf::st_read('wbdhu4_a_us_september2020/wbdhu4_a_us_september2020.gdb') %>%
filter(huc4 %in% basins$basin_huc4)
sf::st_crs(hucs)
# read in temperature data
# data come from here:
temps <- readRDS('data/in/daily_temperatures.rds')
temp_sites <- readRDS('data/in/stream_sites_us.rds')
str(temp_sites)
st_crs(temp_sites)
st_crs(hucs)
names(temp_sites)
# find sites that intersect with hucs
points_in_hucs <- st_join(temp_sites, hucs, join = st_within)
names(points_in_hucs)
summary(as.factor(points_in_hucs$huc4))
names(hucs)
basin_hucs
hucs <- sf::st_read('wbdhu4_a_us_september2020/wbdhu4_a_us_september2020.gdb') %>%
filter(huc4 %in% basins$basin_huc4) %>%
left_join(basins, by = c('huc4' = basin_huc4))
hucs <- sf::st_read('data/in/wbdhu4_a_us_september2020.gdb') %>%
filter(huc4 %in% basins$basin_huc4) %>%
left_join(basins, by = c('huc4' = basin_huc4))
hucs <- sf::st_read('data/in/wbdhu4_a_us_september2020.gdb') %>%
filter(huc4 %in% basins$basin_huc4) %>%
left_join(basins, by = c('huc4' = 'basin_huc4'))
View(hucs)
names(hucs)
ggplot() +
geom_sf(filter(hucs, basin_name %in% 'DRB'))
library(ggplot2)
ggplot() +
geom_sf(filter(hucs, basin_name %in% 'DRB'))
ggplot() +
geom_sf(data = filter(hucs, basin_name %in% 'DRB'))
points_in_hucs <- left_join(hucs, by = c('huc4' = 'basin_huc4'))
points_in_hucs <- left_join(hucs, basins, by = c('huc4' = 'basin_huc4'))
# find sites that intersect with hucs
points_in_hucs <- st_join(temp_sites, hucs, join = st_within)
ggplot() +
geom_sf(data = filter(hucs, basin_name %in% 'DRB')) +
geom_sf(data = filter(points_in_hucs, basin_name %in% 'DRB'), color = 'red')
test <- filter(points_in_hucs, basin_name %in% 'DRB')
View(test)
drb <- readRDS('data/in/drb_boundary.rds')
str(drb)
st_crs(drb)
points_in_drb <- st_join(temp_sites, drb) %>% st_transform(st_crs(hucs))
drb <- readRDS('data/in/drb_boundary.rds') %>% st_transform(st_crs(hucs)
)
points_in_drb <- st_join(temp_sites, drb)
drb <- readRDS('data/in/drb_boundary.rds') %>%
st_as_sf() %>%
st_transform(st_crs(hucs))
points_in_drb <- st_join(temp_sites, drb)
names(points_in_drb)
summary(as.factor(points_in_drb$geometry))
is.na(points_in_drb$geometry)
View(points_in_drb)
drb <- readRDS('data/in/drb_boundary.rds') %>%
st_as_sf() %>%
st_transform(st_crs(hucs)) %>%
mutate(basin = 'DRB')
points_in_drb <- st_join(temp_sites, drb)
names(points_in_drb)
summary(as.factor(points_in_drb$basin))
nrow(test)
ggplot() +
geom_sf(data = filter(hucs, basin_name %in% 'DRB')) +
geom_sf(data = filter(points_in_hucs, basin_name %in% 'DRB'), color = 'red') +
geom_sf(data = points_in_drb, color = 'blue')
points_in_drb <- st_join(temp_sites, drb) %>%
filter(!is.na(basin))
ggplot() +
geom_sf(data = filter(hucs, basin_name %in% 'DRB')) +
geom_sf(data = filter(points_in_hucs, basin_name %in% 'DRB'), color = 'red') +
geom_sf(data = points_in_drb, color = 'blue')
View(test)
drb <- readRDS('data/in/drb_boundary.rds') %>%
st_as_sf() %>%
st_transform(st_crs(hucs)) %>%
mutate(basin_name = 'DRB')
points_in_hucs <- filter(points_in_hucs, !is.na(basin_name)) %>%
filter(!basin_name %in% 'DRB')
points_in_drb <- st_join(temp_sites, drb) %>%
filter(!is.na(basin_name))
names(points_in_hucs)
names(points_in_drb)
sites <- bind_rows(points_in_hucs, points_in_drb)
names(temps)
# now filter temp data to those sites
temps <- filter(site_id %in% unique(sites$site_id))
# now filter temp data to those sites
temps <- filter(temps, site_id %in% unique(sites$site_id))
# temp summary by site
summary <- mutate(temps, year = lubridate::year(date)) %>%
filter(year >= 2013) %>%
group_by(site_id, source) %>%
summarize(n_days = n(),
med_n_daily_obs = median(n_obs))
View(summary)
filter(sites, site_id %in% '6441')
# ecosheds data
sheds <- readRDS("data/in/ecosheds_sites.rds")
head(sheds)
filter(sheds, location_id %in% 6469)
filter(summary, site_id %in% '01480500')
names(summary)
filter(summary, site_id %in% 'USGS-01480500')
summary(as.factor(summary$source))
View(summary)
head(sites)
sites <- group_by(sites, latitude, longitude) %>%
mutate(duplicates = n()) %>% ungroup()
summary(sites$duplicates)
length(which(sites$duplicates > 1))
View(sites)
dups <- filter(sites, duplicates > 1) %>% arrange(latitude, longitude)
View(dups)
sites2 <- mutate(sites, latitude = round(latitude, 4), longitude = round(longitude, 4)) %>%
group_by(latitude, longitude) %>% mutate(duplicates4 = n())
View(sites2)
View(arrange(sites2, latitude, longitude))
View(arrange(sites2, duplicates4, latitude, longitude))
View(arrange(sites2, -duplicates4, latitude, longitude))
length(which(sites2$duplicates >1))
length(which(sites2$duplicates4>1))
library(dplyr)
basins <- tibble(basin_name = c('DRB', rep(c('ILRB', 'UCRB'), each = 2)),
basin_huc4 = c('0204', '0712', '0713', '1401', '1402'))
# read in HUCs and subset
library(sf)
hucs <- sf::st_read('data/in/wbdhu4_a_us_september2020.gdb') %>%
filter(huc4 %in% basins$basin_huc4) %>%
left_join(basins, by = c('huc4' = 'basin_huc4'))
# read in temperature data
# data come from here:
temps <- readRDS('data/in/daily_temperatures.rds')
temp_sites <- readRDS('data/in/stream_sites_us.rds')
drb <- readRDS('data/in/drb_boundary.rds') %>%
st_as_sf() %>%
st_transform(st_crs(hucs)) %>%
mutate(basin_name = 'DRB')
# find sites that intersect with hucs
points_in_hucs <- st_join(temp_sites, hucs, join = st_within)
points_in_hucs <- filter(points_in_hucs, !is.na(basin_name)) %>%
filter(!basin_name %in% 'DRB')
points_in_drb <- st_join(temp_sites, drb) %>%
filter(!is.na(basin_name))
sites <- bind_rows(points_in_hucs, points_in_drb)
# do our best to reconcile duplicate data
head(sites)
sites <- group_by(sites, latitude, longitude) %>%
mutate(duplicates = n()) %>% ungroup()
sites2 <- mutate(sites, latitude = round(latitude, 4), longitude = round(longitude, 4)) %>%
group_by(latitude, longitude) %>% mutate(duplicates4 = n())
# now filter temp data to those sites
temps <- filter(temps, site_id %in% unique(sites$site_id))
# temp summary by site
summary <- mutate(temps, year = lubridate::year(date)) %>%
filter(year >= 2013) %>%
group_by(site_id, source) %>%
summarize(n_days = n(),
med_n_daily_obs = median(n_obs))
# ecosheds data
# need to use better site identifier for EcoSHEDS
# because it includes USGS data
sheds <- readRDS("data/in/ecosheds_sites.rds")
names(sheds)
head(sheds)
head(summary)
View(sites2)
View(arrage(sites2, duplicates4, latitude, longitude))
View(arrange(sites2, duplicates4, latitude, longitude))
View(arrange(sites2, -duplicates4, latitude, longitude))
filter(sheds, location_id %in% '6470')
head(summary)
head(sites)
View(sites)
head(sites2)
names(sites2)
head(summary)
slice_max(n_days)
sites3 <- ungroup(sites2) %>%
left_join(summary, by = c(site_id, source)) %>%
group_by(latitude, longitude) %>%
slice_max(n_days)
sites3 <- ungroup(sites2) %>%
left_join(summary, by = c('site_id', 'source')) %>%
group_by(latitude, longitude) %>%
slice_max(n_days)
View(sites3)
summary(as.factor(sites2$source))
summary(as.factor(sites3$source))
View(filter(sites2, site_id %in% unique(sites3$site_id[sites3$source %in% 'nwis_dv'])))
View(filter(sites2, longitude %in% -86.7062))
View(filter(sites2, site_id %in% 'USGS-05515500'))
View(filter(sites3, site_id %in% 'USGS-05515500'))
View(filter(summary, site_id %in% 'USGS-05515500'))
?slice_max
View(filter(sites3, site_id %in% 'USGS-05515500'))
View(filter(sites2, !site_id %in% unique(sites3$site_id[sites3$source %in% 'nwis_dv'])))
View(filter(summary, site_id %in% 'USGS-05545131'))
test <- filter(temps, site_id %in% 'USGS-05545131')
View(test)
View(test)
summary(sites3$n_days)
dropped_nwisdv <- View(filter(sites2, !site_id %in% unique(sites3$site_id[sites3$source %in% 'nwis_dv'])))
dropped_nwisdv <- filter(sites2, !site_id %in% unique(sites3$site_id[sites3$source %in% 'nwis_dv']))
names(sites2)
dropped_nwisdv <- filter(ungroup(sites2), !site_id %in% unique(sites3$site_id[sites3$source %in% 'nwis_dv']))
unique(sites3$site_id[sites3$source %in% 'nwis_dv'])
dropped_nwisdv <- ungroup(sites2) %>%
filter(source %in% 'nwis_dv') %>%
filter(!site_id %in% unique(sites3$site_id[sites3$source %in% 'nwis_dv']))
View(dropped_nwisdv)
View(filter(summary, site_id %in% dropped_nwisdv$site_id[1]))
dropped_nwisdv$site_id[1]
sites3 <- ungroup(sites2) %>%
left_join(summary, by = c('site_id', 'source'))
View(sites3)
summary(sites3$n_days)
sites <- bind_rows(points_in_hucs, points_in_drb)
# temp summary by site
summary <- mutate(temps, year = lubridate::year(date)) %>%
filter(year >= 2013) %>%
group_by(site_id, source) %>%
summarize(n_days = n(),
med_n_daily_obs = median(n_obs))
# filter sites to those with temp data after 2013
sites <- filter(sites, site_id %in% unique(summary$site_id))
sites <- bind_rows(points_in_hucs, points_in_drb)
# filter sites to those with temp data after 2013
sites <- filter(sites, site_id %in% unique(summary$site_id))
sites <- group_by(sites, latitude, longitude) %>%
mutate(duplicates = n()) %>% ungroup()
summary(sites$duplicates)
sites2 <- mutate(sites, latitude = round(latitude, 4), longitude = round(longitude, 4)) %>%
group_by(latitude, longitude) %>% mutate(duplicates4 = n())
summary(sites2$duplicates4)
sites3 <- ungroup(sites2) %>%
left_join(summary, by = c('site_id', 'source')) %>%
group_by(latitude, longitude) %>%
slice_max(n_days)
summary(as.factor(sites2$source))
summary(as.factor(sites3$source))
View(sites3)
summary(sites3$n_days[sites3$source %in% 'wqp'])
summary(sites3$n_days[sites3$source %in% 'nwis_dv'])
summary(sites3$n_days[sites3$source %in% 'nwis_uv'])
summary(sites3$n_days[sites3$source %in% 'norwest'])
summary(sites3$n_days[sites3$source %in% 'ecosheds'])
names(sites2)
names(sites3)
# sites out
rs_sites <- ungroup(sites3) %>%
select(site_id, source, longitude, latitude, n_days)
View(rs_sites)
length(unique(rs_sites$site_id))
sites2 <- mutate(sites, latitude2 = round(latitude, 4), longitude2 = round(longitude, 4)) %>%
group_by(latitude2, longitude2) %>% mutate(duplicates4 = n())
sites3 <- ungroup(sites2) %>%
left_join(summary, by = c('site_id', 'source')) %>%
group_by(latitude2, longitude2) %>%
slice_max(n_days)
# sites out
rs_sites <- ungroup(sites3) %>%
select(site_id, source, longitude, latitude, n_days)
View(rs_sites)
# sites out
rs_sites <- ungroup(sites3) %>%
select(site_id, source, longitude, latitude, n_days, basin_name)
head(rs_sites)
# sites out
rs_sites <- ungroup(sites3) %>%
select(site_id, source, longitude, latitude, n_days, basin_name) %>%
st_drop_geometry()
View(rs_sites)
# sites out
rs_sites <- ungroup(sites3) %>%
select(site_id, source, longitude, latitude, n_days, basin_name) %>%
st_drop_geometry() %>%
arrange(basin_name, -n_days)
View(rs_sites)
write.csv(rs_sites, 'potential_rs_temperature_stream_sites.csv', row.names = FALSE)
summary(as.factor(rs_sites$basin_name))
summary(as.factor(rs_sites$basin_name[rs_sites$n_days > 1]))
head(rs_sites)
# test going to uv for a dv site
dv <- filter(rs_sites, source %in% 'nwis_dv')
View(dv)
uv <- dataRetrieval::readNWISuv(siteNumbers = '05576195', parameterCd = '00010')
summary(uv$dateTime)
compare <- filter(temps, site_id %in% 'USGS-05576195')
summary(compare$date)
head(rs_sites)
summary(as.factor(rs_sites$basin_name[rs_sites$n_days > 10]))
summary(as.factor(rs_sites$basin_name))
head(rs_sites)
summary(as.factor(rs_sites$source))
summary(as.factor(rs_sites$basin_name))
summary(as.factor(rs_sites$basin_name[rs_sites$n_days > 10]))
summary(rs_sites)
View(rs_sites)
summary(rs_sites)
summary(as.factor(rs_sites$basin_name))
summary(as.factor(rs_sites$source))
summary(as.factor(rs_sites$site_id))
summary(is.na(rs_sites$source))
summary(is.na(rs_sites$site_id))
head(rs_sites)
2883/365
# test missing data
missing <- dataRetrieval::readNWISdv('01415460', parameterCd = '00010')
missing <- dataRetrieval::readNWISuv('01415460', parameterCd = '00010')
summary(as.factor(missing$X_00010_00000_cd))
# test missing data
missing <- dataRetrieval::readNWISdv(c('01415460', '01413500','01415000'), parameterCd = '00010')
summary(as.factor(missing$X_00010_00003_cd))
View(missing)
# uv
missinguv <- dataRetrieval::readNWISuv(c('01415460', '01413500','01415000'), parameterCd = '00010')
test <- group_by(missing, site_no) %>% summarize(n = n(), n_p = length(X_00010_000003_cd %in% 'P'))
test <- group_by(missing, site_no) %>% summarize(n = n(), n_p = length(X_00010_00003_cd %in% 'P'))
View(test)
summary(as.factor(missing$X_00010_00003_cd))
test <- group_by(missing, site_no) %>% summarize(n = n(), n_p = sum(X_00010_00003_cd %in% 'P'))
View(test)
head(missing_uv)
head(missinguv)
head(test)
testuv <- mutate(missing, date = as.Date(dateTime)) %>%
group_by(site_no, date) %>%
slice_max(X_00010_00000)
testuv <- mutate(missinguv, date = as.Date(dateTime)) %>%
group_by(site_no, date) %>%
slice_max(X_00010_00000)
head(testuv)
View(testuv)
?slice_max
testuv <- mutate(missinguv, date = as.Date(dateTime)) %>%
group_by(site_no, date) %>%
slice_max(X_00010_00000, n = 1) %>%
summarize(n = n(), n_p = sum(X_00010_00003_cd %in% 'P'))
testuv <- mutate(missinguv, date = as.Date(dateTime)) %>%
group_by(site_no, date) %>%
slice_max(X_00010_00000, n = 1)
View(testuv)
testuv <- mutate(missinguv, date = as.Date(dateTime)) %>%
group_by(site_no, date) %>%
slice_max(X_00010_00000, n = 1, with_ties = FALSE)
c("A", "P") %in% 'P'
testuv <- mutate(missinguv, date = as.Date(dateTime)) %>%
group_by(site_no, date) %>%
slice_max(X_00010_00000, n = 1, with_ties = FALSE) %>%
group_by(site_no) %>%
summarize(n = n(), n_p = sum(X_00010_00003_cd %in% 'P'))
testuv <- mutate(missinguv, date = as.Date(dateTime)) %>%
group_by(site_no, date) %>%
slice_max(X_00010_00000, n = 1, with_ties = FALSE)
View(testuv)
testuv <- mutate(missinguv, date = as.Date(dateTime)) %>%
group_by(site_no, date) %>%
slice_max(X_00010_00000, n = 1, with_ties = FALSE) %>%
group_by(site_no) %>%
summarize(n = n(), n_p = sum(X_00010_00000_cd %in% 'P'))
View(testuv)
View(test)
remotes::install_gitlab(repo = "wma/iidd/datascience/dssecrets", host = "code.chs.usgs.gov")
